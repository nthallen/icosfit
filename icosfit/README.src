ICOSfit operating instructions:

ICOSfit <configfile>

ICOSfit takes input from the following files:

  the configuration file
  Text-format version of PT.sps or PandT.sps or PTE.txt
  Input spectra

  The name of the configuration file is specified on the
  command line. The name and location of the PT and spectra
  files are specified in the configuration file.

ICOSfit writes output to to the following:

  ./ICOSout/ICOSout.dat          Tabular summary of fit parameters
  ./ICOSout/##/##/##.dat         Individual fits
  ./ICOSout/##/##/##/ICOSout.dat Debug table
  ./ICOSout/##/##/##/####.dat    Debug fits

  The actual location of these outputs is configurable in
  the configuration file.

Configuration file format:

  The ICOSfit configuration file syntax is documented online at
  http://www.arp.harvard.edu/eng/das/manuals/icosfit.html#Syntax
  The grammar is defined in front/front.con.
  
  There are two basic modes of fitting: ICOS and Herriot Cell, depending
  on the instrument configuration. The Herriot Cell functionality is flagged
  by the definition of N_Passes. Both forms use the same models for baseline
  and absorption but vary in how those are combined. The ICOS model is discussed
  in detail in the icos_formulas document. The Herriot Cell model is much
  simpler.  
  
  Line Definitions:

  This program fits to one or more lines. Each line is defined by a
  set of 9 number plus one or more optional modifiers. The syntax is:

    Mol Iso nu S G_air E n delta ierr [options] ;
  
  Mol HITRAN molecule number
  Iso HITRAN isotopomer number
  nu  Wavenumber of line
  S   Spectral line intensity (normalized to isotopomer abundance)
  G_air Gamma_air Lorentz line width
  E = Lower state energy of the transition
  n = coefficient of temerature dependence of air-broadened hw
  delta = air-broadened pressure shift
  ierr = Accuracy indices

  [options] is a comma-separated list of options. Current options are:
    Threshold = <value>
    Position = <initial sample number>

  At least one line must have an initial position specified.
  Threshold defines the point at which small lines are 'fixed'.
  The threshold can be set globally and/or for individual lines.
  The default value is 1e-4.

PTE.txt format: This is the format for files specified with
   the configuration keywork: PTEFile. This files is generally
   generated by the Matlab programs etln_fit7 or etln_fit8.
   The E# parameters define the tuning rate of the specified
   input spectrum in fringe numbers. The fringe number at
   sample x is determined by:
     x' = (x - E0)/1000
     fn = E1 + E2 x' + E3 x'^2 + E4 exp(x'/E5) + E6 exp(x'/E7)
   Within Matlab, this second function is calculated in the
   function etln_evalJ().

  Column Name    Description             Units
  0      ScanNum File Index      
  1      CellP   Cell Pressure           Torr
  2      Tavg    Cell Temperature        K
  3      E0      Sample Number Offset    Samples
  4      E1      Constant Coef.          fringes
  5      E2      Linear Coef.            fringes/Ksamples
  6      E3      Quadratic Coef.         fringes/Ksamples^2
  7      E4      1st exp amp.            fringes
  8      E5      1st exp tau             Ksamples
  9      E6      2nd exp amp.            fringes
  10     E7      2nd exp tau             Ksamples

PT.txt format: This is the "new" format for files specified with
	the configuration keyword: PTFile.
  PT        [ 0] = Time (seconds since 00:00:00 1/1/70 UTC)
  PT        [ 1] = CellP Torr
  PT        [ 2] = Tavg Kelvin
  PT        [ 3] = CPCI14/ScanNum
  PT        [ 4] = Cal_F SCCM
  PT        [ 5] = InltF SCCM
  PT        [ 6] = RORIS 1 = Ringdown, 0 = ICOS
  PT        [ 7] = RateS 1 = 50 Hz, 0 = 10 Hz

PandT.txt format: This is the "old" format for files specified with
	the configuration keyword: PandTFile.
  PandT        [ 0] = Time (seconds since 00:00:00 1/1/70 UTC)
  PandT        [ 1] = CellP Torr
  PandT        [ 2] = Gas1T Celcius
  PandT        [ 3] = Gas2T Celcius
  PandT        [ 4] = Gas3T Celcius
  PandT        [ 5] = Gas4T Celcius
  PandT        [ 6] = CPCI14
  PandT        [ 7] = CPCI16
  PandT        [ 8] = Cal_F SCCM
  PandT        [ 9] = InltF SCCM
  PandT        [10] = RORIS 1 = Ringdown, 0 = ICOS
  PandT        [11] = RateS 1 = 50 Hz, 0 = 10 Hz

=============
OUTPUT FILES:
=============

ICOSconfig.m (or MFile)
  Generated in build_func() in ICOSmain.c
  
  This file helps to define the format of the output
  file so analysis software that needs to read the output
  file can figure out whether or not it understands the
  format. Currently the following values are defined:
   n_input_params - the number of columns copied from
	 the input.
   n_base_params - the number of fit parameters associated
	 with the baseline.
   binary - non-zero if the input ICOS files are in binary
     format
   lines - an array defining the lines being fit, one row
     per line. The columns are:
      1 - molecule
      2 - isotopomer
      3 - nu center wavenumber
      4 - Spectral line intensity (normalized to isotopomer abundance)
      5 - G_air Gamma_air Lorentz line width
      6 - E = Lower state energy of the transition
      7 - n = coefficient of temerature dependence of air-broadened hw
      8 - delta = air-broadened pressure shift
      9 - n_params number of fit parameters (currently 4 for voigt)

ICOSsum.dat format:
  Generated in fitdata::lwrite() in fitfunc.c
  
  1 = Time (seconds since 00:00:00 1/1/70 UTC)
  2 = CellP Torr
  3 = Gas_T Kelvin
  4 = Cal_F SCCM
  5 = InltF SCCM
  6 = ScanNum
  7 = RateS 1 = 50 Hz, 0 = 10 Hz
  8 = Reduce chi squared (more or less)
  9 = nu_F0 wavenumber of fringe zero
  10 = dFN the index of the first fringe in the Signal Region

  The next n_base_params columns define the baseline. If using
  the quadratic fit, there are 3 parameters for the fit, so
  n_base_params is 3. If you are using a baseline file, there
  are as many parameters as there are columns in the file.
  
  The baseline parameters are followed by the absorption
  parameters. Exactly what parameters appear here depend on
  the functional form being used.
  
  func_skew
    func_base
    func_abs
      *nu_F0  =>  n_abs_params = 1
      [ *dnu, func_voigt ]*  => n_abs_line_params = 1
  
  func_base
  func_tau1?
    *MirrorLoss  => n_abs_params = 2?
    func_abs

  func_base
  func_tau[2-4]
    *MirrorLoss
    *k, *l, *phi
    func_abs


  The line parameters are wrapped inside the func_abs, each
  preceeded by a dnu that the func_abs controls. That parameter
  may be fixed at 0 or allowed to float (using the float
  FinePosition syntax). The dnu parameter of the individual
  lines is always fixed and is calculated to be the sum of
  nu_F0 and the func_abs' dnu parameter that corresponds to
  that line.

  Currently there are always 4 parameters per line (voigt). They are:
    1 = dnu the deviation in line center position in cm-1
    2 = G_ed doppler e-folding half-width in cm-1
    3 = N number density in molecules/cm^3
    4 = G_l lorentz half-width in cm-1

  There follows one column for each of the base parameters and
  each of the line parameters. A '1' indicates that the parameter
  was 'free' in the fit. A '0' means the parameter was fixed
  (or calculated based on input parameters).

Format 2:
  1 ScanNum
  2 P
  3 T
  4 Chi Squared
  5 Start
  6 End
  for i = 1:nlines
    2*i+5 fixed
    2*i+6 threshold
  === n_input_params ===
  n_base_params
  n_abs_params (dnu0)
  for i = 1:nlines
    n_abs_line_params (1, dnu(i))
    dnu(0)+dnu(i)
    Ged
    N
    Gl
  floating
