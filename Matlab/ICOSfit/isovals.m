function S = isovals( isos, field )
% S = isovals(isos,field);
% returns the elements of the Isotope table
% isos is a vector of isotopomer numbers ala hitran
% field is one of name, text, abundance, weight, multiplier, unit, precision.
% This file is partial generated by QT/Update_isovals.pl. Make sure you
% understand the format and the changes it will make before modifying this file.
% To add a new isotopologue number N, you will need to:
%   - Add the appropriate add_iso line in this file. You can put in zeros for
%     abundance and molecular weight, as those are set by the update script.
%   - Then:
%     $ cd QT
%     $ touch QT_N.dat
%     $ ./UpdateQT.sh

global ISO_DEFS

if isempty(ISO_DEFS)
  add_iso( 10, 'H_2O', '  H2O  ', 1.0, 0, 1e6, 'ppm', 0.1 );
  add_iso( 11, 'H_2O', '  H2O  ', 9.97317E-1, 18.010565, 1e6, 'ppm', 0.1 );
  add_iso( 12, 'H_2{}^{18}O', ' H218O ', 1.99983E-3, 20.014811, 1e9, 'ppb', 0.1);
  add_iso( 13, 'H_2{}^{17}O', ' H217O ', 3.71884E-4, 19.014780, 1e9, 'ppb', 0.1 );
  add_iso( 14, 'HDO', '  HDO  ', 3.10693E-4, 19.016740, 1e9, 'ppb', 0.1 );
  add_iso( 15, 'HD^{18}O', ' HD18O ', 6.23003E-7, 21.020985, 1e9, 'ppb', 0.1 );
  add_iso( 16, 'HD^{17}O', ' HD17O ', 1.15853E-7, 20.020956, 1e9, 'ppb', 0.1 );
  add_iso( 20, 'CO_2', '  CO2  ', 1.0, 0, 1e6, 'ppm', 0.1 );
  add_iso( 21, 'CO_2', '  CO2  ', 9.84204E-1, 43.989830, 1e6, 'ppm', 0.1 );
  add_iso( 22, '^{13}CO_2', '  13CO2  ', 1.10574E-2, 44.993185, 1e6, 'ppm', 0.1 );
  add_iso( 23, 'CO^{18}O', '  CO18O  ', 3.94707E-3, 45.994076, 1e6, 'ppm', 0.1 );
  add_iso( 24, 'CO^{17}O', '  CO17O  ', 7.33989E-4, 44.994045, 1e6, 'ppm', 0.1 );
  add_iso( 30, 'O_3', '  O3   ', 1.0, 0, 1e6, 'ppm', 0.1 );
  add_iso( 31, 'O_3', '  O3   ', 9.92901E-1, 47.984745, 1e9, 'ppb', 0.1 );
  add_iso( 40, 'N_2O', '  N2O  ', 1.0, 0, 1e6, 'ppm', 0.1 );
  add_iso( 41, 'N_2O', '  N2O  ', 9.90333E-1, 44.001062, 1e6, 'ppm', 0.1 );
  add_iso( 42, 'N^{15}NO', '  N15NO  ', 3.64093E-3, 44.998096, 1e6, 'ppm', 0.1 );
  add_iso( 43, '^{15}NNO', '  15NNO  ', 3.64093E-3, 44.998096, 1e6, 'ppm', 0.1 );
  add_iso( 44, 'N_2^{18}O', '  N218O  ', 1.98582E-3, 46.005308, 1e6, 'ppm', 0.1 );
  add_iso( 45, 'N_2^{17}O', '  N217O  ', 3.69280E-4, 45.005278, 1e6, 'ppm', 0.1 );
  add_iso( 50, 'CO','CO', 1.0, 0, 1e6, 'ppm', 0.1 );
  add_iso( 60, 'CH_4', '  CH4  ', 1.0, 0, 1e6, 'ppm', 0.1 );
  add_iso( 61, 'CH_4', '  CH4  ', 9.88274E-1, 16.031300, 1e6, 'ppm', 0.1 );
  add_iso( 62, '^{13}CH_4', '13CH4', 1.11031E-2, 17.034655, 1e6, 'ppm', 0.1 );
  add_iso( 63, '^{12}CH_3D', '12CH3D', 6.15751E-4, 17.037475, 1e6, 'ppm', 0.1 );
  add_iso( 70, 'O2','O2', 1.0, 0, 1e6, 'ppm', 0.1 );
  add_iso( 80, 'NO','NO', 1.0, 0, 1e6, 'ppm', 0.1 );
  add_iso( 81, 'NO','NO', 9.93974E-1, 29.997989, 1e6, 'ppm', 0.1 );
  add_iso( 90, 'SO2','SO2', 1.0, 0, 1e6, 'ppm', 0.1 );
  add_iso( 100, 'NO_2','NO2', 1.0, 0, 1e6, 'ppm', 0.1 );
  add_iso( 101, 'NO_2','NO2', 9.91616E-1, 45.992904, 1e6, 'ppm', 0.1 );
  add_iso( 110, 'NH3','NH3', 1.0, 0, 1e6, 'ppm', 0.1 );
  add_iso( 120, 'HNO3','HNO3', 1.0, 0, 1e6, 'ppm', 0.1 );
  add_iso( 130, 'OH','OH', 1.0, 0, 1e6, 'ppm', 0.1 );
  add_iso( 131, 'OH','OH', 9.97473E-1, 17.002740, 1e6, 'ppm', 0.1 );
  add_iso( 140, 'HF','HF', 1.0, 0, 1e6, 'ppm', 0.1 );
  add_iso( 150, 'HCl','HCl', 1.0, 0, 1e9, 'ppt', 0.1 );
  add_iso( 151, 'H{}^{35}Cl','H35Cl', 7.57587E-1, 35.976678, 1e9, 'ppt', 0.1 );
  add_iso( 152, 'H{}^{37}Cl','H37Cl', 2.42257E-1, 37.973729, 1e9, 'ppt', 0.1 );
  add_iso( 153, 'D{}^{35}Cl','D35Cl', 1.18005E-4, 36.982853, 1e9, 'ppt', 0.1 );
  add_iso( 154, 'D{}^{37}Cl','D37Cl', 3.77350E-5, 38.979904, 1e9, 'ppt', 0.1 );
  add_iso( 160, 'HBr','HBr', 1.0, 0, 1e6, 'ppm', 0.1 );
  add_iso( 170, 'HI','HI', 1.0, 0, 1e6, 'ppm', 0.1 );
  add_iso( 180, 'ClO','ClO', 1.0, 0, 1e6, 'ppm', 0.1 );
  add_iso( 190, 'OCS','OCS', 1.0, 0, 1e6, 'ppm', 0.1 );
  add_iso( 200, 'H2CO','H2CO', 1.0, 0, 1e9, 'ppb', 0.1 );
  add_iso( 201, 'H2CO','H2CO', 9.86237E-1, 30.010565, 1e9, 'ppb', 0.1 );
  add_iso( 202, 'H2^{13}CO','H213CO', 1.10802E-2, 31.013920, 1e9, 'ppb', 0.1 );
  add_iso( 203, 'H2C^{18}O','H2C18O', 1.97761E-3, 32.014811, 1e9, 'ppb', 0.1 );
  add_iso( 210, 'HOCl','HOCl', 1.0, 0, 1e6, 'ppm', 0.1 );
  add_iso( 220, 'N2','N2', 1.0, 0, 1e6, 'ppm', 0.1 );
  add_iso( 230, 'HCN','HCN', 1.0, 0, 1e6, 'ppm', 0.1 );
  add_iso( 240, 'CH3Cl','CH3Cl', 1.0, 0, 1e6, 'ppm', 0.1 );
  add_iso( 250, 'H2O2','H2O2', 1.0, 0, 1e6, 'ppm', 0.1 );
  add_iso( 260, 'C2H2','C2H2', 1.0, 0, 1e6, 'ppm', 0.1 );
  add_iso( 270, 'C2H6','C2H6', 1.0, 0, 1e6, 'ppm', 0.1 );
  add_iso( 280, 'PH3','PH3', 1.0, 0, 1e6, 'ppm', 0.1 );
  add_iso( 290, 'COF2','COF2', 1.0, 0, 1e6, 'ppm', 0.1 );
  add_iso( 300, 'SF6','SF6', 1.0, 0, 1e6, 'ppm', 0.1 );
  add_iso( 310, 'H2S','H2S', 1.0, 0, 1e6, 'ppm', 0.1 );
  add_iso( 320, 'HCOOH','HCOOH', 1.0, 0, 1e6, 'ppm', 0.1 );
  add_iso( 330, 'HO2','HO2', 1.0, 0, 1e6, 'ppm', 0.1 );
  add_iso( 340, 'O','O', 1.0, 0, 1e6, 'ppm', 0.1 );
  add_iso( 350, 'ClONO2','ClONO2', 1.0, 0, 1e6, 'ppm', 0.1 );
  add_iso( 360, 'NO+','NO+', 1.0, 0, 1e6, 'ppm', 0.1 );
  add_iso( 370, 'HOBr','HOBr', 1.0, 0, 1e6, 'ppm', 0.1 );
  add_iso( 380, 'C2H4','C2H4', 1.0, 0, 1e6, 'ppm', 0.1 );
  add_iso( 390, 'CH3OH','CH3OH', 1.0, 0, 1e6, 'ppm', 0.1 );
end

if size(isos,1) > 1
  isos = isos';
end
ids = [ ISO_DEFS.id ];
idno = interp1(ids, 1:length(ids), isos, 'nearest' );
unmatched = find(isnan(idno));
matched = find(~isnan(idno));
unmatched = [ unmatched find( ids(idno(matched)) ~= isos(matched) ) ];
idno(unmatched) = 1;
if nargin >= 2 && strcmp( field, 'name')
  S = { ISO_DEFS(idno).name }';
  for i = unmatched
    mol = floor(isos(i)/10)*10;
    molid = find(ids == mol);
    if isempty(molid)
      S{i} = sprintf('iso %d',isos(i));
    else
      S{i} = sprintf('%s[%d]', ISO_DEFS(molid(1)).name, isos(i)-molid(1));
    end
  end
  return;
end

if ~isempty(unmatched)
  error('Unable to identify isotope: %d\n', isos(unmatched));
end

if nargin < 2
  S = ISO_DEFS(idno);
elseif strcmp( field, 'name' )
  S = { ISO_DEFS(idno).name }';
elseif strcmp( field, 'text' )
  S = { ISO_DEFS(idno).text }';
elseif strcmp( field, 'abundance' )
  S = [ ISO_DEFS(idno).abundance ]';
elseif strcmp( field, 'weight' )
  S = [ ISO_DEFS(idno).weight ]';
elseif strcmp( field, 'multiplier' )
  S = [ ISO_DEFS(idno).multiplier ]';
  elseif strcmp( field, 'unit' )
  S = { ISO_DEFS(idno).unit }';
  elseif strcmp( field, 'precision' )
  S = [ ISO_DEFS(idno).precision ]';
else
  error( [ 'Unrecognized field: ' field ]);
end

return
end

function add_iso( id, name, text, abundance, weight, multiplier, unit, precision )

global ISO_DEFS;
s = struct( 'id', id, 'name', name, 'text', text, 'abundance', abundance, 'weight', weight, 'multiplier', multiplier, 'unit', unit, 'precision', precision );
if ~isempty(ISO_DEFS)
  ISO_DEFS = [ ISO_DEFS; s ];
else
  ISO_DEFS = s;
end
return
end
